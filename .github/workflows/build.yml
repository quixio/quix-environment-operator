name: Build and Push

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: quixanalytics/quix-environment-operator
  HELM_REGISTRY: oci://registry-1.docker.io/quixanalytics

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run tests
        run: |
          make docker-test
        
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'
          
      - name: Extract original versions
        id: original_versions
        run: |
          APP_VERSION=$(grep 'appVersion:' helm/quix-environment-operator/Chart.yaml | awk '{print $2}' | tr -d '"')
          CHART_VERSION=$(grep '^version:' helm/quix-environment-operator/Chart.yaml | awk '{print $2}')
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
          echo "CHART_VERSION=$CHART_VERSION" >> $GITHUB_ENV
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_OUTPUT
          echo "CHART_VERSION=$CHART_VERSION" >> $GITHUB_OUTPUT
          
      - name: Set development versions for non-main branch
        if: github.ref != 'refs/heads/main'
        run: |
          DEV_VERSION="0.0.${{ github.run_number }}"
          echo "Using development version: $DEV_VERSION"
          echo "APP_VERSION=$DEV_VERSION" >> $GITHUB_ENV
          echo "CHART_VERSION=$DEV_VERSION" >> $GITHUB_ENV
          
          # Update Chart.yaml with development versions
          sed -i "s/^version:.*/version: $DEV_VERSION/" helm/quix-environment-operator/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: \"$DEV_VERSION\"/" helm/quix-environment-operator/Chart.yaml
          
          # Show modified Chart.yaml for verification
          echo "Modified Chart.yaml:"
          cat helm/quix-environment-operator/Chart.yaml

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          # Set IMG env var for make commands
          export IMG="${REGISTRY}/${IMAGE_NAME}:${APP_VERSION}"
          
          # Build docker image
          make docker-build
          
          # Push image if not a PR
          if [ "${{ github.event_name }}" != "pull_request" ]; then
            make docker-push
            
            # Add and push latest tag for main branch
            if [ "${{ github.ref }}" = "refs/heads/main" ]; then
              docker tag ${IMG} ${REGISTRY}/${IMAGE_NAME}:latest
              docker push ${REGISTRY}/${IMAGE_NAME}:latest
            fi
          fi

      - name: Package and lint Helm chart
        run: |
          make helm-lint
          make helm-package

      - name: Push Helm chart to OCI registry
        if: github.event_name != 'pull_request'
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | helm registry login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin registry-1.docker.io
          helm push ./deploy/quix-environment-operator-${{ env.CHART_VERSION }}.tgz ${{ env.HELM_REGISTRY }} 