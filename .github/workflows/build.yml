build-and-push-helm:
  needs: extract-versions
  runs-on: ubuntu-latest
  permissions:
    contents: read
    packages: write
  env:
    HELM_REGISTRY: oci://registry-1.docker.io/quixanalytics
    HELM_REPOSITORY: quix-environment-operator-helm
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: '>=3.8.0'

    - name: Enable OCI support (Helm <3.8)
      if: helm version --short | grep -q '^v3\.[0-7]'
      run: |
        echo "Enabling experimental OCI support for Helm"
        export HELM_EXPERIMENTAL_OCI=1

    - name: Package Helm chart
      run: |
        CHART_DIR=helm/quix-environment-operator
        helm lint $CHART_DIR
        helm package $CHART_DIR --destination ./artifacts

    - name: Log in to Docker Hub OCI registry
      run: |
        echo "${{ secrets.DOCKERHUB_TOKEN }}" | helm registry login \
          --username ${{ secrets.DOCKERHUB_USERNAME }} \
          --password-stdin registry-1.docker.io

    - name: Push chart as OCI artifact
      run: |
        VERSION=${{ needs.extract-versions.outputs.chart_version }}
        OCI_REF="${HELM_REGISTRY}/${HELM_REPOSITORY}:${VERSION}"
        echo "Pushing Helm chart to $OCI_REF"
        helm push ./artifacts/quix-environment-operator-$VERSION.tgz $HELM_REGISTRY/${HELM_REPOSITORY}

    - name: Tag as latest on main branch
      if: github.ref == 'refs/heads/main'
      run: |
        VERSION=${{ needs.extract-versions.outputs.chart_version }}
        LATEST_REF="${HELM_REGISTRY}/${HELM_REPOSITORY}:latest"
        echo "Tagging and pushing 'latest' for $LATEST_REF"
        helm chart save ./artifacts/quix-environment-operator-$VERSION.tgz $LATEST_REF
        helm chart push $LATEST_REF

    - name: Verify chart in OCI registry
      run: |
        echo "Available chart tags in $HELM_REGISTRY/${HELM_REPOSITORY}:"
        helm chart list $HELM_REGISTRY/${HELM_REPOSITORY}
